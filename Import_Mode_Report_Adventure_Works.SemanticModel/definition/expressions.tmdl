expression RangeStart = #datetime(2008, 1, 1, 0, 0, 0) meta [IsParameterQuery=true, Type="DateTime", IsParameterQueryRequired=true]
	lineageTag: 843f0cc4-0822-4991-a89f-1706d2b94004

	annotation PBI_ResultType = DateTime

expression RangeEnd = #datetime(2014, 12, 31, 0, 0, 0) meta [IsParameterQuery=true, Type="DateTime", IsParameterQueryRequired=true]
	lineageTag: 7c71288d-ea93-46bf-9f7b-e68158c5010a

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = DateTime

expression DateKey =
		// Function: fxDateToKey
		// Converts a datetime value into an integer DateKey (yyyyMMdd)
		let
		    fxDateToKey = (inputDateTime as datetime) as number =>
		    let
		        // Ensure it's treated as date (drop time)
		        asDate = Date.From(inputDateTime),
		        // Format as text in yyyyMMdd
		        formatted = Date.ToText(asDate, "yyyyMMdd"),
		        // Convert to number
		        dateKey = Number.FromText(formatted)
		    in
		        dateKey
		in
		    fxDateToKey
	lineageTag: f770f50e-c96a-4a44-a4f2-1f77736f3de7

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Function

